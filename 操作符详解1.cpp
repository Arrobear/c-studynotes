//算数操作符
// +	-	*	/	%
#include<stdio.h>
//int main()
//{
//	int a = 3 / 5;//a=0
//	int b = 6 / 5;//b=1
//	float c = 6 / 5;//c=1
//	float d = 6 / 5.0;//d=1.2	,5.0:编译器默认是double类型
//	//正确写法：5.0f
//	//%操作符的两端必须为整数
//	int e = 7 % -2;
//	printf("%d", e);
//	return 0;
//}

//移位操作符
// <<	>>
// 操作符的运算不会改变数值原本的值
//int main()
//{
//	int a = 2;
//	int b=a << 1;//a向左移动一位,把a的二进制位向左移动一位,==> b=4
//	// >>与<<同理
//  //1.算术右移
//  //右边丢弃，左边补原符号位
//  //2.逻辑右移
//  //右边丢弃，左边补0
//  // >> 是算术右移
//	return 0;
//}

//位操作符
// &：按位与	|：按位或	^：按位异或
// 对象只能是整数
//int main()
//{
//	int a = 3;
//	int b = 5;
//	int c = a & b;
//	// 按二进制位与
//	// 1 - 0 -> 0 ;0 - 0 -> 0 ;1 - 1 -> 1
//    //
//	// 按二进制位或
//	// 1 - 0 -> 1 ;0 - 0 -> 0 ;1 - 1 -> 1
//	//
//	// 按二进制位异或
//	// 相同为0，相异为1
//	// 
//	return 0;
//}

//交换两个变量的值，不使用第三个变量
//1.
//int main()
//{
//	int a = 3;
//	int b = 5;
//	a = b + a;
//	b = a - b;
//	a = a - b;
//	printf("%d,%d", a, b);
//}
//2.
//int main()
//{
//	int a = 3;
//	int b = 5;
//	a = a ^ b;
//	b = a ^ b;
//	a = a ^ b;
//	printf("%d,%d", a, b);
//	return 0;
//}

//编写一个程序求一个正数补码中1的个数
//int main()
//{
//	int a = 13;
//	int b = 1;
//	int count = 0;
//	while (a)
//	{
//		if (a & b)
//		{
//			count++;
//		}
//		a = a >> 1;
//	}
//	printf("%d", count);
//	return 0;
//}

